---
import Layout from "../layouts/Layout.astro";
---

<script>
	import { loop, onCanvasResize, useWebGLCanvas } from "../lib";
	import { useRawWebGLCanvas } from "../lib/hooks/useRawWebGLCanvas";

	// useWebGLCanvas({
	// 	canvas: document.querySelector("canvas"),
	// 	fragment: /* glsl */ `
	// 		varying vec2 vUv;
	// 		uniform float uTime;

	// 		void main() {
	// 			gl_FragColor = vec4(vUv, sin(uTime) / 2. + .5, 1.);
	// 		}
	// 	`,
	// });

	const canvas = document.querySelector("canvas");

	const { setSize, render, uniforms } = useRawWebGLCanvas({
		canvas,
		fragment: /* glsl */ `
			varying vec2 vUv;
			uniform float uTime;

			void main() {
				gl_FragColor = vec4(vUv, sin(uTime) / 2. + .5, 1.);
			}
		`,
		vertex: /* glsl */ `
			attribute vec3 aPosition;
			varying vec2 vUv;

			void main() {
				vUv = aPosition.xy;
				gl_Position = vec4(2.0 * aPosition - 1.0, 1.0);
			}
		`,
		uniforms: {
			uTime: 0,
		},
		attributes: {
			aPosition: {
				data: [-1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1],
				size: 2,
			},
		},
	});

	loop(({ time }) => {
		uniforms.uTime = time / 500;
		render();
	});

	onCanvasResize(canvas, ({ devicePixelSize }) => {
		setSize(devicePixelSize.width, devicePixelSize.height);
	});
</script>

<Layout title="Gradient">
	<canvas></canvas>
</Layout>
